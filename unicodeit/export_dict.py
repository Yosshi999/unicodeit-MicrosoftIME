import csv
import sys

from .data import REPLACEMENTS, COMBININGMARKS, SUBSUPERSCRIPTS

valid_chars = "!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
mapdict = {chr(0x0021 + i): chr(0xFF01 + i) for i in range(94)}
mapdict["\\"] = "￥"
mapper = str.maketrans(mapdict)
valid_set = set(valid_chars)

if __name__ == "__main__":
    outname = 'msime/data.txt'
    if len(sys.argv) == 2:
        outname = sys.argv[1]

    # open with UTF16LE with BOM
    with open(outname, 'w', encoding='utf-16', newline='') as f:
        f.write('!autogenerated with python -m unicodeit.export_dict\r\n')
        writer = csv.writer(f, delimiter='\t', lineterminator='\r\n', quoting=csv.QUOTE_NONE)
        for l, u in REPLACEMENTS:
            if len(set(l) - valid_set) > 0:
                print(f"{l} contains invalid character. skipping...")
                writer.writerow(["!skipped", l.translate(mapper), u, "名詞"])
            else:
                writer.writerow([l.translate(mapper), u, "名詞"])

        for l, u in COMBININGMARKS:
            if len(set(l) - valid_set) > 0:
                print(f"{l} contains invalid character. skipping...")
                writer.writerow(["!skipped", l.translate(mapper), u, "名詞"])
            else:
                writer.writerow([l.translate(mapper), u, "名詞"])

        for l, u in SUBSUPERSCRIPTS:
            if len(set(l) - valid_set) > 0:
                print(f"{l} contains invalid character. skipping...")
                writer.writerow(["!skipped", l.translate(mapper), u, "名詞"])
            else:
                writer.writerow([l.translate(mapper), u, "名詞"])
